#!/bin/bash
# Text format
_DEF='\033[0m'
_GRAS='\033[1m'
_SOUL='\033[4m'
_CLIG='\033[5m'
_SURL='\033[7m'

# Colors
_BLACK='\033[30m'
_RED='\033[31m'
_GREEN='\033[32m'
_YELLOW='\033[33m'
_BLUE='\033[34m'
_PURPLE='\033[35m'
_CYAN='\033[36m'
_GREY='\033[37m'

# Background
_IBLACK='\033[40m'
_IRED='\033[41m'
_IGREEN='\033[42m'
_IYELLOW='\033[43m'
_IBLUE='\033[44m'
_IPURPLE='\033[45m'
_ICYAN='\033[46m'
_IGREY='\033[47m'

#read -p "Path Init : " PATHE
#cd ~/$PATHE
#clear
while :
do
 clear
 echo -en "$_CYAN$_IPURPLE"
 echo -e "1           Network            "
 echo -e "2           System             "
 echo -e "3           Scprit             "
 echo -e "0           Exit               "
 echo -e "$_DEF"
  read INPUT 
 case $INPUT in
  1) cd ../network
	 RES=$(sh 01)
	 RRES=$(ifconfig -l)
	 if [ "$RES" == "$RRES" ]; then
		 echo -e "01 $_GREEN[OK] $_DEF"
	 else
		 echo -e "01 $_RED[KO] $_DEF"
	 fi ;
	 RES1=$(cat 02 | head -n 1)
	 RES=$(cat 02 | tail -n 1)
	 echo -e "02 a) : $RES1"
	 echo -e "02 b) : $RES"
	 RES=$(sh 03)
	 RRES=$(ifconfig -a | grep 'en1' -C 1 | grep 'ether' | awk '{print $2}')
	 if [ "$RES" == "$RRES" ]; then
		 echo -e "03 $_GREEN[OK] $_DEF"
	 else
		 echo -e "03 $_RED[KO] $_DEF"
	 fi ;
	 RES=$(sh 04)
	 RRES=$(route -n get default | grep 'gateway' | awk '{print$2}')
	 if [ "$RES" == "$RRES" ]; then
		 echo -e "04 $_GREEN[OK] $_DEF"
	 else
		 echo -e "04 $_RED[KO] $_DEF"
	 fi ;
	 RES=$(sh 05)
	 RRES=$(nslookup slash16.org | grep 'Server' | awk '{print$2}')
	 if [ "$RES" == "$RRES" ]; then
		 echo -e "05 $_GREEN[OK] $_DEF"
	 else
		 echo -e "05 $_RED[KO] $_DEF"
	 fi ;
	 RES=$(cat 06)
	 echo -e "06 : $RES"
	 RES=$(cat 07)
	 if [ "$RES" == "nslookup slash16.org 8.8.8.8" ]; then
		 echo -e "07 $_GREEN[OK] $_DEF"
	 else
		 echo -e "07 $_RED[KO] $_DEF"
	 fi ;
	 RES=$(cat 08)
	 echo -e "08 : $RES"
	 RES=$(cat 09)
	 if [ "$RES" ==  "163.172.250.12" ] || [ "$RES" == "163.172.250.13"] || [ "$RES" == "163.172.250.11"] || [ "$RES"  == "10.52.1.76"] || [ "$RES" == "10.52.1.12"] || [ "$RES "== "10.52.1.11"] ; then
		 echo -e "09 $_GREEN[OK] $_DEF"
	 else
		 echo -e "09 $_RED[KO] $_DEF"
	 fi ;
	 RES=$(cat 11)
	 echo -e "11 : $RES"
	 RES=$(sh 12)
	 RRES=$(ipconfig getpacket en0 | grep yi | awk '{print $3}')
	 if [ "$RES" == "$RRES" ]; then
		 echo -e "12 $_GREEN[OK] $_DEF"
	 else
		 echo -e "12 $_RED[KO] $_DEF"
	 fi ;
	 RES=$(cat 13)
	 echo -e "13 : $RES"
	 RES=$(cat 14)
	 echo -e "14 : $RES"
	  RES=$(cat 15)
	 echo -e "15 : $RES"
	 ;;
  2)
	 cd ../system
	 RES=$(cat 01)
	 if [ "$RES" == "/etc/debian_version" ]; then
		 echo -e "01 $_GREEN[OK] $_DEF"
	 else
		 echo -e "01 $_RED[KO] $_DEF"
	 fi ;
	 echo -en "02 "
	 cat 02 | grep "hostname"
	 if [ $? ==  0 ]; then
		 echo -e "02 $_GREEN[OK] $_DEF"
	 else
		 echo -e "02 $_RED[KO] $_DEF"
	 fi ;
	 RES=$(cat 03)
	 echo -e "03 $RES"
	 echo -en "04 "
	 cat 04 | grep "uptime"
	 if [ $? ==  0 ]; then
		 echo -e "04 $_GREEN[OK] $_DEF"
	 else
		 echo -e "04 $_RED[KO] $_DEF"
	 fi ;
	 echo -en "05 "
	 cat 05 | grep "/etc/init.d/ssh"
	 if [ $? ==  0 ]; then
		 echo -e "05 $_GREEN[OK] $_DEF"
	 else
	 	cat 05 | grep "service ssh status"
	 	if [ $? ==  0 ]; then
		 echo -e "05 $_GREEN[OK] $_DEF"
		else	
		  echo -e "05 $_RED[KO] $_DEF"
		fi ;
	 fi ;
	 echo -en "06 "
	 cat 06 | grep "/etc/init.d/ssh"
	 if [ $? ==  0 ]; then
		 echo -e "06 $_GREEN[OK] $_DEF"
	 else
	 	cat 06 | grep "service ssh restart"
	 	if [ $? ==  0 ]; then
		 echo -e "06 $_GREEN[OK] $_DEF"
		else	
		  echo -e "06 $_RED[KO] $_DEF"
		fi ;
	 fi ;
	 RES=$(cat 07)
	 echo -e "07 : $RES"
	 echo -en "08 "
	 cat 08 | grep ".ssh"
	 if [ $? ==  0 ]; then
		 echo -e "08 $_GREEN[OK] $_DEF"
	 else
		 echo -e "08 $_RED[KO] $_DEF"
	 fi ;
	  RES=$(cat 09)
	 if [ "$RES" ==  "w" ] || [ "$RES" == "who"]; then
		 echo -e "09 $_GREEN[OK] $_DEF"
	 else
		 echo -e "09 $_RED[KO] $_DEF"
	 fi;
	 RES=$(cat 10)
	 if [ "$RES" ==  "fdisk -l" ] ; then
		 echo -e "10 $_GREEN[OK] $_DEF"
	 else
		 echo -e "10 $_RED[KO] $_DEF"
	 fi;
	 echo -en "11 "
	 cat 11 | grep "df -h"
	 if [ $? ==  0 ]; then
		 echo -e "11 $_GREEN[OK] $_DEF"
	 else
		 echo -e "11 $_RED[KO] $_DEF"
	 fi ;
	 echo -en "12 "
	 cat 12 | grep "du -sh /var/*"
	 if [ $? ==  0 ]; then
		 echo -e "12 $_GREEN[OK] $_DEF"
	 else
		 echo -e "12 $_RED[KO] $_DEF"
	 fi ;
	 echo -en "13 "
	 cat 13 | grep "ps -aux"
	 if [ $? ==  0 ]; then
		 echo -e "13 $_GREEN[OK] $_DEF"
	 else
	 	cat 13 | grep "top"
	 	if [ $? ==  0 ]; then
		 echo -e "13 $_GREEN[OK] $_DEF"
		else	
		  echo -e "13 $_RED[KO] $_DEF"
		fi ;
	 fi ;
		 echo -en "14 "
	 cat 14 | grep "tail -f /var/log/syslog &"
	 if [ $? ==  0 ]; then
		 echo -e "14 $_GREEN[OK] $_DEF"
	 else
		 echo -e "14 $_RED[KO] $_DEF"
	 fi ;
	 	 echo -en "15 "
	 cat 15 | grep "kill"
	 if [ $? ==  0 ]; then
		 echo -e "15 $_GREEN[OK] $_DEF"
	 else
		 echo -e "15 $_RED[KO] $_DEF"
	 fi ;
		 echo -en "16 "
	 cat 16 | grep "cron"
	 if [ $? ==  0 ]; then
		 echo -e "16 $_GREEN[OK] $_DEF"
	 else
		 echo -e "16 $_RED[KO] $_DEF"
	 fi ;
		echo -en "17 "
	 cat 17 | grep "ssh"
	 if [ $? ==  0 ]; then
		 echo -e "17 $_GREEN[OK] $_DEF"
		 echo -e "17$_GREEN Du type ssh login@machine $_DEF"
	 else
		 echo -e "17 $_RED[KO] $_DEF"
	 fi ;
			 echo -en "18 "
	 cat 18 | grep "service ssh stop"
	 if [ $? ==  0 ]; then
		 echo -e "18 $_GREEN[OK] $_DEF"
	 else
		 echo -e "18 $_RED[KO] $_DEF"
	 fi ;
			 echo -en "19 "
	 cat 19 | grep "cron"
	 if [ $? ==  0 ]; then
		 echo -e "19 $_GREEN[OK] $_DEF"
	 else
		 echo -e "19 $_RED[KO] $_DEF"
	 fi ;
	 RES=$(sh 20)
	 RRES=$(cat /etc/passwd | awk -F: '{print$1}')
	 if [ "$RES" == "$RRES" ]; then
		 echo -e "20 $_GREEN[OK] $_DEF"
	 else
		 echo -e "20 $_RED[KO] $_DEF"
	 fi ;
	  echo -en "21 "
	 cat 21 | grep "cat /etc/passwd"
	 if [ $? ==  0 ]; then
		 echo -e "21 $_GREEN[OK] $_DEF"
	 else
		 echo -e "21 $_RED[KO] $_DEF"
	 fi ;
	 echo -en "22 "
	 cat 22 | grep "adduser"
	 if [ $? ==  0 ]; then
		 echo -e "22 $_GREEN[OK] $_DEF"
	 else
		 echo -e "22 $_RED[KO] $_DEF"
	 fi ;
	ES=$(cat 23)
	 echo -e "23 : $RES"
	 echo -en "24 "
	 cat 24 | grep "dpkg"
	 if [ $? ==  0 ]; then
		 echo -e "24 $_GREEN[OK] $_DEF"
	 else
		 echo -e "24 $_RED[KO] $_DEF"
	 fi ;
		
		 ;; 
	3)cd ../scripts
		echo -e "------------01-------------"
		cat 01

		echo -e "------------02-------------"
		cat 02	
		;;
	0) break
		;;
 esac
 read -p "Press Enter to continue..." END
done
clear

echo -e "test partie 1"



echo -e "test partie 2"

echo -e "test partie 3"
